{"version":3,"sources":["Components/Note.js","Components/Category.js","data/products_data.js","Components/Subcategory.js","Components/Navbar.js","Components/ProductLine.js","Components/TestStuff.js","App.js","serviceWorker.js","index.js"],"names":["StyledNote","styled","div","Note","props","note","className","StyledH1","h1","StyledCategoryNote","Category","category","name","children","PRODUCTS_DATA","subcategories","products","id","price","size","Subcategory","subCategory","StyledNavbar","StyledName","a","Navbar","href","StyledProductLine","isActive","StyledProductPrice","StyledProductName","isFavorite","StyledSizeSpan","span","StyledProductNote","ProductLine","product","toggle","Math","round","toFixed","onClick","StyledTestStuff","StyledVisibility","visibility","StyledButtonOpen","button","StyledButtonClose","TestStuff","useState","counter","setCounter","setFavorites","toggleProductIsFavorite","visible","setVisible","StyledApp","App","favorites","bool","forEach","f","newArray","filter","e","map","key","sc","p","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.f831b41b.chunk.js","sourcesContent":["import React from \"react\";\nimport styled from \"@emotion/styled\";\n\nconst StyledNote = styled.div`\n  color: #a21212;\n  font-size: smaller;\n`;\n\nfunction Note(props) {\n  const { note, className } = props;\n  if (!note) return null;\n  return <StyledNote className={className}>{note}</StyledNote>;\n}\n\nexport default Note;\n","import React from \"react\";\nimport Note from \"./Note\";\nimport styled from \"@emotion/styled\";\n\nconst StyledH1 = styled.h1`\n  border-top: solid thin;\n  padding-top: 16px;\n`;\n\nconst StyledCategoryNote = styled(Note)`\n  padding: 0 0 0.5em 0;\n  background-color: red;\n`;\n\nfunction Category(props) {\n  const { category } = props;\n  return (\n    <div>\n      <StyledH1>{category.name}</StyledH1>\n      {category.note && (\n        <StyledCategoryNote\n          className=\"note categroyNote\"\n          note={category.note}\n        />\n      )}\n      {props.children}\n    </div>\n  );\n}\n\nexport default Category;\n","export const PRODUCTS_DATA = [\n  {\n    name: \"drank\",\n    subcategories: [\n      {\n        name: \"fris\",\n        products: [\n          { id: 0, name: \"cola\", price: 2 },\n          { id: 1, name: \"water\", price: 2 },\n        ],\n      },\n      {\n        name: \"alcohol\",\n        products: [\n          { id: 2, name: \"bier\", price: 2, size: 25 },\n          { id: 3, name: \"bier\", price: 2.4, size: 33 },\n          { id: 4, name: \"wijn\", price: 4 },\n        ],\n      },\n    ],\n  },\n  {\n    name: \"eten\",\n    note: \"voor de snelle honger\",\n    subcategories: [\n      {\n        name: \"hapjes\",\n        note: \"deze kan je altijd bestellen\",\n        products: [\n          { id: 5, name: \"chips\", price: 1, note: \"paprika of zout\" },\n          { id: 6, name: \"olijven\", price: 2, note: \"mix zwart en groen\" },\n          { id: 7, name: \"kaas\", price: 4, note: \"mix jonge en oude blokjes\" },\n          { id: 8, name: \"salami\", price: 3 },\n        ],\n      },\n      {\n        name: \"warm\",\n        note: \"niet na 22:00\",\n        products: [\n          { id: 9, name: \"hamburger\", price: 4 },\n          { id: 10, name: \"pizza\", price: 4 },\n        ],\n      },\n    ],\n  },\n];\n","import React from \"react\";\nimport Note from \"./Note\";\n\nfunction Subcategory(props) {\n  const { subCategory } = props;\n  return (\n    <div>\n      <h2>{subCategory.name}</h2>\n      <Note className=\"note categoryNote\" note={subCategory.note} />\n      {props.children}\n    </div>\n  );\n}\n\nexport default Subcategory;\n","import React from \"react\";\nimport styled from \"@emotion/styled\";\n\nconst StyledNavbar = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  height: 10vh;\n  background-color: black;\n  color: white;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 100vw;\n`;\n\nconst StyledName = styled.a`\n  color: white;\n  text-decoration: none;\n\n  &:hover {\n    color: grey;\n  }\n`;\n\nfunction Navbar(props) {\n  return (\n    <StyledNavbar className={props.className}>\n      <StyledName href=\"#\">{props.name}</StyledName>\n    </StyledNavbar>\n  );\n}\n\nexport default Navbar;\n","import React from \"react\";\nimport Note from \"./Note\";\nimport styled from \"@emotion/styled\";\n\nconst StyledProductLine = styled.div`\n  display: flex;\n  color: ${(props) => (props.isActive ? \"green\" : \"black\")};\n  cursor: pointer;\n\n  & div {\n    flex: 2;\n  }\n`;\n\nconst StyledProductPrice = styled.div`\n  display: flex;\n  justify-content: flex-end;\n`;\n\nconst StyledProductName = styled.div`\n  flex: 6;\n  color: ${(props) => (props.isFavorite ? \"red\" : \"black\")};\n`;\n\nconst StyledSizeSpan = styled.span`\n  font-size: 0.6em;\n`;\n\nconst StyledProductNote = styled(Note)`\n  padding: 0 1.5em 0.5em 0;\n`;\n\nfunction isActive(product) {}\n\n/** @return {null} */\nfunction ProductLine(props) {\n  const { product, isFavorite, toggle } = props;\n  product.price = (Math.round(product.price * 100) / 100).toFixed(2);\n  if (!product.name) return null;\n  return (\n    <>\n      <StyledProductLine onClick={toggle} isActive={isActive(product)}>\n        <StyledProductName isFavorite={isFavorite}>\n          {product.name}{\" \"}\n          {product.size && <StyledSizeSpan>-{product.size}CL</StyledSizeSpan>}\n        </StyledProductName>\n        <StyledProductPrice>{product.price}&euro;</StyledProductPrice>\n      </StyledProductLine>\n      {product.note && (\n        <StyledProductNote className=\"note productNote\" note={product.note} />\n      )}\n    </>\n  );\n}\n\nexport default ProductLine;\n","import React, { useState } from \"react\";\nimport { PRODUCTS_DATA } from \"../data/products_data\";\nimport styled from \"@emotion/styled\";\n\nconst StyledTestStuff = styled.div`\n  background-color: grey;\n  padding: 1rem;\n  color: white;\n`;\n\nconst StyledVisibility = styled.div`\n  display: ${(props) => (props.visibility ? \"block\" : \"none\")};\n`;\n\nconst StyledButtonOpen = styled.button`\n  display: ${(props) => (!props.visibility ? \"block\" : \"none\")};\n`;\n\nconst StyledButtonClose = styled.button`\n  display: ${(props) => (props.visibility ? \"block\" : \"none\")};\n`;\n\nfunction TestStuff(props) {\n  const [counter, setCounter] = useState(0);\n  const { setFavorites, toggleProductIsFavorite } = props;\n\n  const [visible, setVisible] = useState(true);\n\n  return (\n    <StyledTestStuff>\n      <StyledButtonOpen\n        visibility={visible}\n        onClick={() => setVisible(!visible)}\n      >\n        TestStuff\n      </StyledButtonOpen>\n      <StyledButtonClose\n        visibility={visible}\n        onClick={() => setVisible(!visible)}\n      >\n        Close\n      </StyledButtonClose>\n      <StyledVisibility visibility={visible}>\n        <button onClick={() => setCounter(counter + 1)}>Increment</button>\n        <button onClick={() => setCounter(counter - 1)}>Decrement</button>\n        {counter}\n        <hr />\n        <button\n          onClick={() => {\n            setFavorites([PRODUCTS_DATA[0].subcategories[0].products[0]]);\n          }}\n        >\n          Favorite\n        </button>\n        <button\n          onClick={() =>\n            toggleProductIsFavorite(\n              PRODUCTS_DATA[0].subcategories[0].products[0]\n            )\n          }\n        >\n          Toggle Favorite\n        </button>\n      </StyledVisibility>\n    </StyledTestStuff>\n  );\n}\n\nexport default TestStuff;\n","import React, { useState } from \"react\";\nimport \"normalize.css\";\nimport \"./App.css\";\nimport Category from \"./Components/Category\";\nimport { PRODUCTS_DATA } from \"./data/products_data\";\nimport Subcategory from \"./Components/Subcategory\";\nimport Navbar from \"./Components/Navbar\";\nimport styled from \"@emotion/styled\";\nimport ProductLine from \"./Components/ProductLine\";\nimport TestStuff from \"./Components/TestStuff\";\n\nconst StyledApp = styled.div`\n  padding: 7rem 2rem;\n`;\n\nfunction App() {\n  const [favorites, setFavorites] = useState([]);\n\n  const isFavorite = (product) => {\n    let bool = false;\n    favorites.forEach((f) => {\n      if (f.id === product.id) bool = true;\n    });\n    return bool;\n  };\n\n  const toggleProductIsFavorite = (product) => {\n    let newArray = favorites;\n    if (isFavorite(product)) {\n      newArray = newArray.filter((e) => e.id !== product.id);\n    } else {\n      newArray = [...favorites, product];\n    }\n    setFavorites(newArray);\n  };\n\n  return (\n    <StyledApp className=\"app\">\n      <Navbar name=\"Menu\" />\n      <TestStuff\n        toggleProductIsFavorite={toggleProductIsFavorite}\n        setFavorites={setFavorites}\n      />\n      {PRODUCTS_DATA.map((category) => (\n        <Category key={category.name} category={category}>\n          {category.subcategories.map((sc) => (\n            <Subcategory key={sc.name} subCategory={sc}>\n              {sc.products.map((p) => (\n                <ProductLine\n                  key={p.id}\n                  product={p}\n                  isFavorite={isFavorite(p)}\n                  toggle={() => toggleProductIsFavorite(p)}\n                />\n              ))}\n            </Subcategory>\n          ))}\n        </Category>\n      ))}\n    </StyledApp>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}