{"version":3,"sources":["Components/Note.js","Components/Category.js","data/products_data.js","Components/ProductLine.js","Components/Subcategory.js","App.js","serviceWorker.js","index.js"],"names":["Note","props","className","note","Category","category","name","children","PRODUCTS_DATA","subcategories","products","id","price","size","ProductLine","product","Subcategory","subCategory","map","p","key","App","sc","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"mOAMeA,MAJf,SAAcC,GACZ,OAAO,yBAAKC,UAAWD,EAAMC,WAAYD,EAAME,OCalCC,MAbf,SAAkBH,GAAQ,IAChBI,EAAaJ,EAAbI,SACR,OACE,6BACE,4BAAKA,EAASC,MACbD,EAASF,MACR,kBAAC,EAAD,CAAMD,UAAU,oBAAoBC,KAAME,EAASF,OAEpDF,EAAMM,WCXAC,EAAgB,CAC3B,CACEF,KAAM,QACNG,cAAe,CACb,CACEH,KAAM,OACNI,SAAU,CACR,CAAEC,GAAI,EAAGL,KAAM,OAAQM,MAAO,GAC9B,CAAED,GAAI,EAAGL,KAAM,QAASM,MAAO,KAGnC,CACEN,KAAM,UACNI,SAAU,CACR,CAAEC,GAAI,EAAGL,KAAM,OAAQM,MAAO,EAAGC,KAAM,IACvC,CAAEF,GAAI,EAAGL,KAAM,OAAQM,MAAO,IAAKC,KAAM,IACzC,CAAEF,GAAI,EAAGL,KAAM,OAAQM,MAAO,OAKtC,CACEN,KAAM,OACNH,KAAM,wBACNM,cAAe,CACb,CACEH,KAAM,SACNH,KAAM,+BACNO,SAAU,CACR,CAAEC,GAAI,EAAGL,KAAM,QAASM,MAAO,EAAGT,KAAM,mBACxC,CAAEQ,GAAI,EAAGL,KAAM,UAAWM,MAAO,EAAGT,KAAM,sBAC1C,CAAEQ,GAAI,EAAGL,KAAM,OAAQM,MAAO,EAAGT,KAAM,6BACvC,CAAEQ,GAAI,EAAGL,KAAM,SAAUM,MAAO,KAGpC,CACEN,KAAM,OACNH,KAAM,gBACNO,SAAU,CACR,CAAEC,GAAI,EAAGL,KAAM,YAAaM,MAAO,GACnC,CAAED,GAAI,GAAIL,KAAM,QAASM,MAAO,QCf3BE,MArBf,SAAqBb,GAAQ,IACnBc,EAAYd,EAAZc,QACR,OAAKA,EAAQT,KAEX,oCACE,yBAAKJ,UAAU,eACb,6BACGa,EAAQT,KAAM,IACdS,EAAQF,MACP,0BAAMX,UAAU,eAAhB,IAAgCa,EAAQF,KAAxC,OAGJ,6BAAME,EAAQH,MAAd,WAEDG,EAAQZ,MACP,kBAAC,EAAD,CAAMD,UAAU,mBAAmBC,KAAMY,EAAQZ,QAb7B,MCWba,MAbf,SAAqBf,GAAQ,IACnBgB,EAAgBhB,EAAhBgB,YACR,OACE,6BACE,4BAAKA,EAAYX,MACjB,kBAAC,EAAD,CAAMJ,UAAU,mBAAmBC,KAAMc,EAAYd,OACpDc,EAAYP,SAASQ,KAAI,SAACC,GAAD,OACxB,kBAAC,EAAD,CAAaC,IAAKD,EAAER,GAAII,QAASI,SCU1BE,MAff,WACE,OACE,yBAAKnB,UAAU,OACb,oCACCM,EAAcU,KAAI,SAACb,GAAD,OACjB,kBAAC,EAAD,CAAUe,IAAKf,EAASC,KAAMD,SAAUA,GACrCA,EAASI,cAAcS,KAAI,SAACI,GAAD,OAC1B,kBAAC,EAAD,CAAaF,IAAKE,EAAGhB,KAAMW,YAAaK,aCDhCC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.8c7535bc.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction Note(props) {\r\n  return <div className={props.className}>{props.note}</div>;\r\n}\r\n\r\nexport default Note;\r\n","import React from \"react\";\r\nimport Note from \"./Note\";\r\n\r\nfunction Category(props) {\r\n  const { category } = props;\r\n  return (\r\n    <div>\r\n      <h1>{category.name}</h1>\r\n      {category.note && (\r\n        <Note className=\"note categroyNote\" note={category.note} />\r\n      )}\r\n      {props.children}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Category;\r\n","export const PRODUCTS_DATA = [\r\n  {\r\n    name: \"drank\",\r\n    subcategories: [\r\n      {\r\n        name: \"fris\",\r\n        products: [\r\n          { id: 0, name: \"cola\", price: 2 },\r\n          { id: 1, name: \"water\", price: 2 },\r\n        ],\r\n      },\r\n      {\r\n        name: \"alcohol\",\r\n        products: [\r\n          { id: 2, name: \"bier\", price: 2, size: 25 },\r\n          { id: 3, name: \"bier\", price: 2.4, size: 33 },\r\n          { id: 4, name: \"wijn\", price: 4 },\r\n        ],\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    name: \"eten\",\r\n    note: \"voor de snelle honger\",\r\n    subcategories: [\r\n      {\r\n        name: \"hapjes\",\r\n        note: \"deze kan je altijd bestellen\",\r\n        products: [\r\n          { id: 5, name: \"chips\", price: 1, note: \"paprika of zout\" },\r\n          { id: 6, name: \"olijven\", price: 2, note: \"mix zwart en groen\" },\r\n          { id: 7, name: \"kaas\", price: 4, note: \"mix jonge en oude blokjes\" },\r\n          { id: 8, name: \"salami\", price: 3 },\r\n        ],\r\n      },\r\n      {\r\n        name: \"warm\",\r\n        note: \"niet na 22:00\",\r\n        products: [\r\n          { id: 9, name: \"hamburger\", price: 4 },\r\n          { id: 10, name: \"pizza\", price: 4 },\r\n        ],\r\n      },\r\n    ],\r\n  },\r\n];\r\n","import React from \"react\";\r\nimport Note from \"./Note\";\r\n\r\n/** @return {null} */\r\nfunction ProductLine(props) {\r\n  const { product } = props;\r\n  if (!product.name) return null;\r\n  return (\r\n    <>\r\n      <div className=\"productLine\">\r\n        <div>\r\n          {product.name}{\" \"}\r\n          {product.size && (\r\n            <span className=\"productSize\">-{product.size}CL</span>\r\n          )}\r\n        </div>\r\n        <div>{product.price}&euro;</div>\r\n      </div>\r\n      {product.note && (\r\n        <Note className=\"note productNote\" note={product.note} />\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ProductLine;\r\n","import React from \"react\";\r\nimport Note from \"./Note\";\r\nimport ProductLine from \"./ProductLine\";\r\n\r\nfunction Subcategory(props) {\r\n  const { subCategory } = props;\r\n  return (\r\n    <div>\r\n      <h2>{subCategory.name}</h2>\r\n      <Note className=\"note categorNote\" note={subCategory.note} />\r\n      {subCategory.products.map((p) => (\r\n        <ProductLine key={p.id} product={p} />\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Subcategory;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport Category from \"./Components/Category\";\nimport { PRODUCTS_DATA } from \"./data/products_data\";\nimport Subcategory from \"./Components/Subcategory\";\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <h1>Menu</h1>\n      {PRODUCTS_DATA.map((category) => (\n        <Category key={category.name} category={category}>\n          {category.subcategories.map((sc) => (\n            <Subcategory key={sc.name} subCategory={sc} />\n          ))}\n        </Category>\n      ))}\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}